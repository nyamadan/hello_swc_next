import SWRProvider from "@/components/SWRProvider";
import {
  MyRequestKey,
  MyRequest,
  MyResponse,
  requestToString,
} from "@/response/responses";
import fetchJson from "@/server/fetchJson";
import React from "react";
import "./globals.css";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface Props {
  children: React.ReactNode;
}

export default async function RootLayout({ children }: Props) {
  const responses: Partial<
    Record<string, { [R in MyRequestKey]: MyResponse[R] }[MyRequestKey]>
  > = {};
  for (const req of [{ url: "/api/todos" }] satisfies MyRequest[]) {
    const res = await fetchJson(req);
    responses[requestToString(req)] = res;
  }

  return (
    <html lang="en">
      <body>
        <SWRProvider fallback={responses}>{children}</SWRProvider>
      </body>
    </html>
  );
}
